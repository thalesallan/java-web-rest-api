# Workflow √∫nico otimizado - CI/CD + Deploy Railway
name: üöÄ CI/CD & Deploy

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  # Job 1: Build e Testes (sempre executa)
  test-and-build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    
    steps:
    - name: üì• Checkout
      uses: actions/checkout@v4
    
    - name: ‚òï Setup JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: üß™ Executar testes
      run: mvn -B test

    - name: üî® Build da aplica√ß√£o
      run: mvn -B clean package -DskipTests

    - name: ‚úÖ Verificar integridade
      run: mvn -B verify -DskipTests

    - name: üì¶ Upload JAR artifact
      uses: actions/upload-artifact@v4
      with:
        name: app-jar
        path: target/*.jar
        retention-days: 7

    - name: üéØ Status do build
      run: |
        echo "‚úÖ Build conclu√≠do com sucesso!"
        echo "üì¶ JAR criado: $(ls target/*.jar)"
        echo "üöÇ Pronto para Railway!"
        echo ""
        echo "üîó Para deploy no Railway:"
        echo "1. Acesse: https://railway.app"
        echo "2. New Project ‚Üí Deploy from GitHub repo"
        echo "3. Selecione este reposit√≥rio"
        echo "4. Deploy autom√°tico!"

  # Job 2: Release autom√°tica (apenas push para main com commits relevantes)
  auto-release:
    runs-on: ubuntu-latest
    needs: test-and-build
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    permissions:
      contents: write
      issues: write
      pull-requests: write
      packages: write
    
    steps:
    - name: üì• Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: ‚òï Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: üì¶ Setup semantic-release
      run: |
        npm install semantic-release @semantic-release/github
        cat > .releaserc.json << 'EOF'
        {
          "branches": ["main"],
          "repositoryUrl": "https://github.com/${{ github.repository }}",
          "plugins": [
            "@semantic-release/commit-analyzer",
            "@semantic-release/release-notes-generator",
            "@semantic-release/github"
          ]
        }
        EOF

    - name: üè∑Ô∏è Criar release (se necess√°rio)
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: npx semantic-release

    - name: ‚òï Setup JDK 17 (para publish)
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        server-id: github
        settings-path: ${{ github.workspace }}

    - name: üì• Download JAR artifact
      uses: actions/download-artifact@v4
      with:
        name: app-jar
        path: target/

    - name: üì¶ Publicar no GitHub Packages (se release foi criada)
      run: |
        if git describe --tags --exact-match HEAD >/dev/null 2>&1; then
          echo "üè∑Ô∏è Tag encontrada, publicando no GitHub Packages..."
          mvn deploy -s $GITHUB_WORKSPACE/settings.xml -DskipTests
        else
          echo "‚ÑπÔ∏è Nenhuma tag criada, pulando publica√ß√£o"
        fi
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

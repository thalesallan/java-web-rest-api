# Workflow para cria√ß√£o autom√°tica de releases baseado em Conventional Commits
name: üöÄ Release Autom√°tico

on:
  push:
    branches: [ main ]

jobs:
  release:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'chore(release)') && !contains(github.event.head_commit.message, '[skip ci]')"
    permissions:
      contents: write
      issues: write
      pull-requests: write
    
    steps:
    - name: üì• Baixar c√≥digo
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: ‚òï Configurar Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: üì¶ Instalar semantic-release
      run: npm install semantic-release @semantic-release/github

    - name: üîß Criar configura√ß√£o do semantic-release
      run: |
        cat > .releaserc.json << 'EOF'
        {
          "branches": ["main"],
          "repositoryUrl": "https://github.com/${{ github.repository }}",
          "plugins": [
            "@semantic-release/commit-analyzer",
            "@semantic-release/release-notes-generator",
            "@semantic-release/github"
          ]
        }
        EOF    - name: üîç Verificar commits para release
      id: check
      run: |
        # Verifica se h√° commits desde a √∫ltima tag que justifiquem uma release
        LAST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "")
        if [ -z "$LAST_TAG" ]; then
          echo "Nenhuma tag anterior encontrada, tentar√° criar release"
          echo "should_release=true" >> $GITHUB_OUTPUT
        else
          # Verifica commits desde a √∫ltima tag
          COMMITS=$(git log $LAST_TAG..HEAD --oneline --grep="^feat\|^fix\|^perf\|BREAKING CHANGE" || echo "")
          if [ -n "$COMMITS" ]; then
            echo "Commits encontrados para release:"
            echo "$COMMITS"
            echo "should_release=true" >> $GITHUB_OUTPUT
          else
            echo "Nenhum commit encontrado para release"
            echo "should_release=false" >> $GITHUB_OUTPUT
          fi
        fi

    - name: üè∑Ô∏è Criar release autom√°tica
      if: steps.check.outputs.should_release == 'true'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: npx semantic-release
